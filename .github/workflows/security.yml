name: 🔒 Advanced Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 0'  # Weekly on Sunday at 2 AM

jobs:
  dependency-scan:
    name: 📦 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './cicd/package-lock.json'
      
      - name: Install dependencies
        working-directory: './cicd'
        run: npm ci
        
      - name: Run npm audit
        working-directory: './cicd'
        run: |
          npm audit --audit-level=moderate
          npm audit --json > audit-report.json
          
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: ./cicd/audit-report.json

  sast-scan:
    name: 🔍 Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: './cicd'
          
      - name: CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          cd cicd
          cat > Dockerfile << 'EOF'
          FROM node:18-alpine
          WORKDIR /app
          COPY package*.json ./
          RUN npm ci --only=production
          COPY . .
          RUN npm run build
          EXPOSE 3000
          CMD ["npm", "start"]
          EOF
          
          docker build -t app:latest .
          
      - name: Scan Docker image
        uses: anchore/scan-action@v3
        with:
          image: "app:latest"
          fail-build: false
          
      - name: Upload scan results
        uses: anchore/scan-action/upload-sarif@v3
        if: always()

  secrets-scan:
    name: 🗝️ Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified