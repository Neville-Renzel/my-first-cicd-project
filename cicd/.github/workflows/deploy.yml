# This is the name of our automation workflow
name: Deploy to Vercel

# This tells GitHub when to run our automation
on:
  # Run when someone pushes code to the main branch
  push:
    branches: [ main ]
  # Run when someone creates a pull request to main branch
  pull_request:
    branches: [ main ]

# These are the jobs (tasks) our automation will do
jobs:
  # Job 1: Check and test our code
  test:
    name: Run Tests and Linting
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Download our code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Step 2: Set up Node.js (JavaScript environment)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      # Step 3: Install all the packages our app needs
      - name: Install dependencies
        run: npm ci
        
      # Step 4: Check if our code follows good practices
      - name: Run ESLint (code quality check)
        run: npm run lint
        
      # Step 5: Try to build our app to catch any errors
      - name: Build application
        run: npm run build
        
  # Job 2: Deploy to Vercel (only if tests pass)
  deploy:
    name: Deploy to Vercel
    needs: test  # This means: only run if the test job succeeds
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch
    
    steps:
      # Step 1: Download our code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Step 2: Deploy to Vercel using their official action
      - name: Deploy to Vercel
        uses: vercel/action@v1
        with:
          # These are secret keys that let GitHub talk to Vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          # Deploy to production
          vercel-args: '--prod'